name: Generate and Deploy Allure Report

on:
  push:
    branches:
      - main
        workflow_dispatch

permissions:
  contents: read

jobs:
  tests:
    runs-on: ubuntu-latest
    continue-on-error: true
    steps:
      - uses: actions/checkout@v4
      - name: Set up Python 3.12
        uses: actions/setup-python@v2
        with:
          python-version: "3.12"

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install flake8 pytest
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi

      - name: Lint with flake8
        run: |
          flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
          flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics

      - name: Run tests
        run: |
          pytest -s -vv --alluredir=allure-results

      - name: Add allure information
        working-directory: allure-results
        if: always()
        run: |
          echo GIT_BRANCH=${{ github.head_ref || github.ref_name }} >> environment.properties
          echo GIT_COMMIT_ID=${{ github.sha }} >> environment.properties
          echo GIT_COMMIT_MESSAGE=$(git show -s --format=%s HEAD) >> environment.properties
          echo GIT_COMMIT_AUTHOR_NAME=$(git show -s --format='%ae' HEAD) >> environment.properties
          echo GIT_COMMIT_TIME=$(git show -s --format=%ci HEAD) >> environment.properties
          echo CHROME_VERSION=$(google-chrome --product-version) >> environment.properties

  generate_and_deploy_report:
    name: Generate & Deploy Allure report
    runs-on: ubuntu-latest
    if: always()
    needs: [ tests ]
    steps:
      - name: 1. Get Allure history
        uses: actions/checkout@v4
        if: always()
        continue-on-error: true
        with:
          ref: gh-pages
          path: gh-pages

      - name: 2. Download Artifacts
        uses: actions/download-artifact@v2
        id: download
        if: always()
        continue-on-error: true
        with:
          name: allure-results

      - name: 3. Generate Allure report
        run: |
          allure generate allure-results --clean -o allure-report
          echo "Allure report generated"
        continue-on-error: true

      - name: 4. Deploy Allure report
        uses: peaceiris/actions-gh-pages@v3
        if: always()
        with:
          github_token: ${{ secrets.CI_TOKEN }}
          publish_dir: ./allure-report
